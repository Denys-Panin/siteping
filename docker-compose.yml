version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/src/staticfiles
      - media_volume:/src/media
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
    volumes:
      - static_volume:/src/staticfiles
      - media_volume:/src/media
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: celery -A core worker -l info
    volumes:
      - .:/app
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - redis
      - db
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  db:
    image: postgres:15
    volumes:
     - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-site_monitor}
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    restart: unless-stopped

volumes:
  pgdata:
  static_volume:
  media_volume:

