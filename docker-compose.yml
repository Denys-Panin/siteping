version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: >
      gunicorn core.wsgi:application
      --bind 0.0.0.0:8000
      --log-level info
      --access-logfile /src/logs/gunicorn.access.log
      --error-logfile /src/logs/gunicorn.error.log
    volumes:
      - .:/app
      - static_volume:/src/staticfiles
      - media_volume:/src/media
      - logs:/src/logs
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  nginx:
    image: nginx:stable
    container_name: siteping-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/src/staticfiles:ro
      - media_volume:/src/media:ro
      - ./certs:/etc/letsencrypt:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/html:/var/www/html:ro
      - logs:/src/logs
    depends_on:
      - web
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: celery -A core worker -l info --logfile=/src/logs/celery.log
    volumes:
      - .:/app
      - logs:/src/logs
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
      - logs:/src/logs
    env_file:
      - ${ENV_FILE:-.env}
    depends_on:
      - redis
      - db
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  db:
    image: postgres:15
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-site_monitor}
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    volumes:
      - logs:/src/logs
      - ./docker/promtail/config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - loki
    restart: unless-stopped

volumes:
  pgdata:
  static_volume:
  media_volume:
  logs:
  grafana-storage:

